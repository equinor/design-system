(function(e,r){typeof exports=="object"&&typeof module<"u"?r(exports,require("style-dictionary-utils"),require("@equinor/eds-tokens-build")):typeof define=="function"&&define.amd?define(["exports","style-dictionary-utils","@equinor/eds-tokens-build"],r):(e=typeof globalThis<"u"?globalThis:e||self,r(e["generate-variables"]={},e.styleDictionaryUtils,e.edsTokensBuild))})(this,function(e,r,t){"use strict";const a=`${process.cwd()}/build`,n=`${a}/css`,l=`${a}/js`,u=`${a}/json`;r.StyleDictionary.registerTransform(t.pxFormatted),r.StyleDictionary.registerTransform(t.pxTransform),r.StyleDictionary.registerTransform(t.pxToRem),r.StyleDictionary.registerTransform(t.fontQuote);async function c(){const o=`${process.cwd()}/tokens`;console.info("Running Style Dictionary build script"),console.info("Tokens directory:",o);const s="color/",i=["name/kebab",t.PX_TO_REM_NAME,t.PX_FORMATTED_NAME,t.FONT_QUOTE_NAME];await t.createFoundationColorVariables({tokensDir:o,cssBuildPath:n,colorBuildPath:s,cssTransforms:i}),await t.createStaticColorVariables({tokensDir:o,cssBuildPath:n,colorBuildPath:s,cssTransforms:i}),await t.createDynamicColorVariables({tokensDir:o,cssBuildPath:n,colorBuildPath:s,cssTransforms:i}),await t.createSpacingAndTypographyVariables({tokensDir:o,cssBuildPath:n,cssTransforms:i})}c().then(()=>{console.log("✅ Variables generated successfully")}).catch(o=>{console.error("❌ Error generating color variables:",o)}),e.cssBuildPath=n,e.generate=c,e.jsBuildPath=l,e.jsonBuildPath=u,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});
