(function(e,t){typeof exports=="object"&&typeof module<"u"?t(exports,require("style-dictionary-utils"),require("@equinor/eds-tokens-build")):typeof define=="function"&&define.amd?define(["exports","style-dictionary-utils","@equinor/eds-tokens-build"],t):(e=typeof globalThis<"u"?globalThis:e||self,t(e["generate-variables"]={},e.styleDictionaryUtils,e.edsTokensBuild))})(this,function(e,t,r){"use strict";const n=`${process.cwd()}/build`,i=`${n}/css`,l=`${n}/js`,u=`${n}/json`;t.StyleDictionary.registerTransform(r.pxFormatted),t.StyleDictionary.registerTransform(r.pxTransform),t.StyleDictionary.registerTransform(r.pxToRem),t.StyleDictionary.registerTransform(r.fontQuote);async function c(){const o=`${process.cwd()}/tokens`;console.info("Running Style Dictionary build script"),console.info("Tokens directory:",o);const a="color/",s=["name/kebab",r.PX_TO_REM_NAME,r.PX_FORMATTED_NAME,r.FONT_QUOTE_NAME];await r.createFoundationColorVariables({tokensDir:o,cssBuildPath:i,colorBuildPath:a,cssTransforms:s}),await r.createClassicColorVariables({tokensDir:o,cssBuildPath:i,colorBuildPath:a,cssTransforms:s}),await r.createMatrixColorVariables({tokensDir:o,colorBuildPath:a,prefix:"eds-color"}),await r.createSpacingAndTypographyVariables({tokensDir:o,cssBuildPath:i,cssTransforms:s})}c().then(()=>{console.log("✅ Variables generated successfully")}).catch(o=>{console.error("❌ Error generating color variables:",o)}),e.cssBuildPath=i,e.generate=c,e.jsBuildPath=l,e.jsonBuildPath=u,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})});
