name: Publish all packages
on:
  workflow_dispatch:
    inputs:
      npm-tag:
        description: 'Tag for npm packages (next | latest)'
        required: true
        default: 'next'
env:
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

jobs:
  setup:
    uses: equinor/design-system/.github/workflows/_setup_new.yml@develop
    secrets: inherit
    with:
      cacheKey: ${{ github.sha }}
      checkout_paths: packages
      tag: ${{ github.event.inputs.npm-tag }}
  packages:
    name: Process packages
    runs-on: ubuntu-latest
    needs: [setup]
    steps:
      - name: Use "setup" cache
        id: setup-cache
        uses: actions/cache@v3
        with:
          path: |
            ./*
            ~/.pnpm-store
          key: ${{ github.sha }}
      - name: Use built packages cache
        id: packages-cache
        uses: actions/cache@v3
        with:
          path: |
            ./*
            ~/.pnpm-store
          key: ${{ github.sha }}-dist-production-all-packages
      - name: Build packages
        id: build-packages
        run: node_modules/.bin/pnpm run build
      - name: Build Storybook
        id: build-core-storybook
        run: node_modules/.bin/pnpm build:storybook
      - name: Build lab Storybook
        id: build-lab-storybook
        run: node_modules/.bin/pnpm build:storybook:lab
      - name: log-errors-to-slack
        uses: act10ns/slack@v2
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        if: failure()
  publish-icons:
    name: Publish icons to npm
    runs-on: ubuntu-latest
    needs: [packages, setup]
    steps:
      - name: Use built packages cache
        id: packages-cache
        uses: actions/cache@v3
        with:
          path: |
            ./*
            ~/.pnpm-store
          key: ${{ github.sha }}-dist-production-all-packages
      - name: Publish to npm
        id: publish-to-npm
        run: |
          node_modules/.bin/pnpm config set '//registry.npmjs.org/:_authToken' ${{ secrets.NPM_TOKEN }}
          node_modules/.bin/pnpm --filter @equinor/eds-tokens publish --access public --tag ${{ needs.setup.outputs.tag }} --no-git-checks
      - name: log-errors-to-slack
        uses: act10ns/slack@v2
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        if: failure()
  publish-tokens:
    name: Publish tokens to npm
    runs-on: ubuntu-latest
    needs: [packages, setup]
    steps:
      - name: Use built packages cache
        id: packages-cache
        uses: actions/cache@v3
        with:
          path: |
            ./*
            ~/.pnpm-store
          key: ${{ github.sha }}-dist-production-all-packages
      - name: Publish to npm
        id: publish-to-npm
        run: |
          node_modules/.bin/pnpm config set '//registry.npmjs.org/:_authToken' ${{ secrets.NPM_TOKEN }}
          node_modules/.bin/pnpm --filter @equinor/eds-tokens publish --access public --tag ${{ needs.setup.outputs.tag }} --no-git-checks
      - name: log-errors-to-slack
        uses: act10ns/slack@v2
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        if: failure()
  publish-utils-package:
    name: Publish utils to npm
    runs-on: ubuntu-latest
    needs: [packages, setup, publish-tokens]
    steps:
      - name: Use built packages cache
        id: packages-cache
        uses: actions/cache@v3
        with:
          path: |
            ./*
            ~/.pnpm-store
          key: ${{ github.sha }}-dist-production-all-packages
      - name: Publish to npm
        id: publish-to-npm
        run: |
          node_modules/.bin/pnpm config set '//registry.npmjs.org/:_authToken' ${{ secrets.NPM_TOKEN }}
          node_modules/.bin/pnpm --filter @equinor/eds-utils publish --access public --tag ${{ needs.setup.outputs.tag }} --no-git-checks
      - name: log-errors-to-slack
        uses: act10ns/slack@v2
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        if: failure()
  publish-lab-package:
    name: Publish lab to npm
    runs-on: ubuntu-latest
    needs: [publish-utils-package, setup]
    steps:
      - name: Use built packages cache
        id: packages-cache
        uses: actions/cache@v3
        with:
          path: |
            ./*
            ~/.pnpm-store
          key: ${{ github.sha }}-dist-production-all-packages
      - name: Publish to npm
        id: publish-to-npm
        run: |
          node_modules/.bin/pnpm config set '//registry.npmjs.org/:_authToken' ${{ secrets.NPM_TOKEN }}
          node_modules/.bin/pnpm --filter @equinor/eds-lab-react publish --access public --tag ${{ needs.setup.outputs.tag }} --no-git-checks
      - name: log-errors-to-slack
        uses: act10ns/slack@v2
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        if: failure()
  publish-storybook-lab:
    needs: [setup, packages]
    name: Build & Deploy Website
    runs-on: ubuntu-latest
    steps:
      - name: Use cache with storybook files
        id: use-cache-storybook
        uses: actions/cache@v3
        with:
          path: |
            ./*
            ~/.pnpm-store
          key: ${{ github.sha }}-dist-production-all-packages
      - name: Deploy the website
        id: deploy-website
        uses: tibor19/static-website-deploy@v2
        with:
          enabled-static-website: 'true'
          folder: 'packages/eds-lab-react/storybook-build'
          public-access-policy: 'container'
          connection-string: ${{ secrets.AZ_STORAGE_STORYBOOK_LAB_CONNECTION_STRING }}
      - name: log-errors-to-slack
        uses: act10ns/slack@v2
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        if: failure()
  publish-core-package:
    name: Publish core-react to npm
    runs-on: ubuntu-latest
    needs: [publish-utils-package, publish-icons, publish-tokens, setup]
    steps:
      - name: Use built packages cache
        id: packages-cache
        uses: actions/cache@v3
        with:
          path: |
            ./*
            ~/.pnpm-store
          key: ${{ github.sha }}-dist-production-all-packages
      - name: Publish to npm
        id: publish-to-npm
        run: |
          node_modules/.bin/pnpm config set '//registry.npmjs.org/:_authToken' ${{ secrets.NPM_TOKEN }}
          node_modules/.bin/pnpm --filter @equinor/eds-core-react publish --access public --tag ${{ needs.setup.outputs.tag }} --no-git-checks
      - name: log-errors-to-slack
        uses: act10ns/slack@v2
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        if: failure()
  publish-storybook:
    needs: [setup, packages]
    name: Build & Deploy Website
    runs-on: ubuntu-latest
    steps:
      - name: Use cache with storybook files
        id: use-cache-storybook
        uses: actions/cache@v3
        with:
          path: |
            ./*
            ~/.pnpm-store
          key: ${{ github.sha }}-dist-production-all-packages
      - name: Deploy the website
        id: deploy-website
        uses: tibor19/static-website-deploy@v2
        with:
          enabled-static-website: 'true'
          folder: 'packages/eds-core-react/storybook-build'
          public-access-policy: 'container'
          connection-string: ${{ secrets.AZ_STORAGE_CONNECTION_STRING_2022 }}
      - name: log-errors-to-slack
        uses: act10ns/slack@v2
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        if: failure()
