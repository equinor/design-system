name: Publish core-react storybook
on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment for the core-react storybook'
        required: false
        type: choice
        options:
          - development
          - production
        default: 'development'
  push:
    branches:
      - main
    paths:
      - 'packages/eds-core-react/**'
      - 'packages/eds-tokens/**'
      - 'packages/eds-icons/**'
permissions:
  id-token: write
env:
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

jobs:
  setup:
    uses: ./.github/workflows/_setup.yml
    secrets: inherit
    with:
      cacheKey: ${{ github.sha }}
      checkout_paths: packages
  packages:
    name: Process packages
    runs-on: ubuntu-latest
    needs: [setup]
    steps:
      - name: Use "setup" cache
        id: get-setup-cache
        uses: actions/cache@v4
        with:
          path: |
            ./*
            ~/.pnpm-store
          key: ${{ github.sha }}
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.12.0'
      - name: Setup pnpm
        id: setup-pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false
      - name: Build packages
        id: build-packages
        run: pnpm run build
      - name: Build Storybook
        id: build-storybook
        run: |
          echo Running build:storybook!
          pnpm build:storybook
      - name: Upload storybook build
        uses: actions/upload-artifact@v4
        with:
          name: storybook-build
          path: packages/eds-core-react/storybook-build
          retention-days: 1
  publish-storybook:
    needs: [setup, packages]
    name: Build & Deploy Website
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.event.inputs.environment || 'development' }}
    steps:
      - name: Download storybook build
        uses: actions/download-artifact@v4
        with:
          name: storybook-build
          path: packages/eds-core-react/storybook-build

      - name: Debug - List downloaded files
        run: |
          echo "=== Downloaded files ==="
          ls -la packages/eds-core-react/storybook-build/
          echo ""
          echo "=== Checking index.json for TypographyNext ==="
          if grep -q "typography-typographynext" packages/eds-core-react/storybook-build/index.json; then
            echo "‚úÖ TypographyNext FOUND in index.json"
          else
            echo "‚ùå TypographyNext NOT FOUND in index.json"
          fi
          echo ""
          echo "=== Checking for Typography.new.stories file ==="
          ls -la packages/eds-core-react/storybook-build/assets/ | grep -i "typography.new" || echo "No Typography.new files found"

      - name: Az CLI login üîë
        uses: azure/login@v1
        with:
          client-id: d58b2e85-2d34-4cdb-ad70-5f2b767dd8e2
          tenant-id: 3aa4a235-b6e2-48d5-9195-7fcf05b459b0
          allow-no-subscriptions: true

      - name: Deploy to Azure Blob Storage üöÄ
        id: deploy-website
        env:
          AZURE_STORAGE_CONNECTION_STRING: ${{ secrets.AZ_STORYBOOK_CONNECTION_STRING }}
        run: |
          echo "Deploying to Azure Blob Storage..."

          az storage blob upload-batch \
            --destination '$web' \
            --source packages/eds-core-react/storybook-build \
            --overwrite \
            --connection-string "$AZURE_STORAGE_CONNECTION_STRING"

          echo "‚úÖ Deployment completed successfully"

      - name: logout üîì
        run: az logout
        if: always()

      - name: log-errors-to-slack
        uses: act10ns/slack@v2
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        if: failure()

  purge-cdn:
    if: github.event.inputs.environment == 'production'
    needs: [publish-storybook]
    name: Purge cdn
    uses: ./.github/workflows/_purge_cdn.yaml
    secrets: inherit
    with:
      environment: production
      endpoint: storybook
