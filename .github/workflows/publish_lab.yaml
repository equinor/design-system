# TODO: Create a composite action for publishing to simplify things
name: Publish lab-react
on:
  workflow_dispatch:
    inputs:
      npm-tag:
        description: 'Tag for npm package (next | latest)'
        required: true
        type: choice
        options:
          - next
          - latest
        default: 'next'
env:
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

jobs:
  setup:
    uses: ./.github/workflows/_setup.yml
    secrets: inherit
    with:
      cacheKey: ${{ github.sha }}
      checkout_paths: packages
      tag: ${{ github.event.inputs.npm-tag }}
  packages:
    name: Process packages
    runs-on: ubuntu-latest
    needs: [setup]
    steps:
      - name: Use "setup" cache
        id: setup-cache
        uses: actions/cache@v4
        with:
          path: |
            ./*
            ~/.pnpm-store
          key: ${{ github.sha }}
      - name: Use "dist" cache
        id: dist-cache
        uses: actions/cache@v4
        with:
          path: |
            ./*
            ~/.pnpm-store
          key: ${{ github.sha }}-dist-${{ github.event.inputs.environment }}-lab
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.12.0'
      - name: Setup pnpm
        id: setup-pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false
      - name: Build packages
        id: build-packages
        run: pnpm run build
      - name: Build lab Storybook
        id: build-storybook
        run: pnpm build:storybook:lab
      - name: log-errors-to-slack
        uses: act10ns/slack@v2
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        if: failure()
  publish-utils-package:
    name: Publish utils to npm
    runs-on: ubuntu-latest
    needs: [packages, setup]
    steps:
      - name: Use "dist" cache
        id: dist-cache
        uses: actions/cache@v4
        with:
          path: |
            ./*
            ~/.pnpm-store
          key: ${{ github.sha }}-dist-${{ github.event.inputs.environment }}-lab
      - name: Publish to npm
        id: publish-to-npm
        run: |
          pnpm config set '//registry.npmjs.org/:_authToken' ${{ secrets.NPM_TOKEN }}
          pnpm --filter @equinor/eds-utils publish --access public --tag ${{ needs.setup.outputs.tag }} --no-git-checks
      - name: log-errors-to-slack
        uses: act10ns/slack@v2
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        if: failure()
  publish-lab-package:
    name: Publish lab to npm
    runs-on: ubuntu-latest
    needs: [publish-utils-package, setup]
    steps:
      - name: Use "dist" cache
        id: dist-cache
        uses: actions/cache@v4
        with:
          path: |
            ./*
            ~/.pnpm-store
          key: ${{ github.sha }}-dist-${{ github.event.inputs.environment }}-lab
      - name: Publish to npm
        id: publish-to-npm
        run: |
          pnpm config set '//registry.npmjs.org/:_authToken' ${{ secrets.NPM_TOKEN }}
          pnpm --filter @equinor/eds-lab-react publish --access public --tag ${{ needs.setup.outputs.tag }} --no-git-checks
      - name: log-errors-to-slack
        uses: act10ns/slack@v2
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        if: failure()
  publish-storybook:
    needs: [setup, packages]
    name: Publish Storybook
    runs-on: ubuntu-latest
    steps:
      - name: Use cache with storybook files
        id: use-cache-storybook
        uses: actions/cache@v4
        with:
          path: |
            ./*
            ~/.pnpm-store
          key: ${{ github.sha }}-dist-${{ github.event.inputs.environment }}-lab
      - name: Deploy the website
        id: deploy-website
        uses: tibor19/static-website-deploy@v2
        with:
          enabled-static-website: 'true'
          folder: 'packages/eds-lab-react/storybook-build'
          public-access-policy: 'container'
          connection-string: ${{ secrets.AZ_STORAGE_STORYBOOK_LAB_CONNECTION_STRING }}
      - name: log-errors-to-slack
        uses: act10ns/slack@v2
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        if: failure()
