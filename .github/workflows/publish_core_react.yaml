name: Publish core-react
on:
  workflow_dispatch:
    inputs:
      storybook-slot:
        description: 'Azure webapp slot for Storybook (no value deploys to production)'
        required: false
        default: 'development'
      npm-tag:
        description: 'Tag for npm package'
        required: true
        default: 'next'
jobs:
  setup:
    name: Setup base files
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        run: |
          REPO="https://${GITHUB_ACTOR}:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git"
          BRANCH="${GITHUB_REF/#refs\/heads\//}"

          # Reference https://github.com/actions/checkout/issues/172
          # Following code is based on logs of actions/checkout@v, with sparseCheckout stuff inserted in the middle
          echo "Syncing repository: $GITHUB_REPOSITORY"
          echo "Working directory is '$(pwd)' GITHUB_WORKSPACE=$GITHUB_WORKSPACE BRANCH=$BRANCH"
          git version
          git init $GITHUB_WORKSPACE
          git remote add origin https://github.com/$GITHUB_REPOSITORY
          git config --local gc.auto 0
          # Now interesting part
          git sparse-checkout init --cone
          # Add here contents of sparse-checkout line by line
          git sparse-checkout set libraries/core-react libraries/tokens libraries/icons
          # echo ...
          git -c protocol.version=2 fetch --no-tags --prune --progress --depth=10 origin +${GITHUB_SHA}:refs/remotes/origin/${BRANCH}
          git checkout --progress --force -B $BRANCH refs/remotes/origin/$BRANCH
      - name: Cache pnpm modules
        uses: actions/cache@v2
        env:
          cache-name: cache-pnpm-modules
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ matrix.node-version }}-
      - name: Install pnpm & dependencies ðŸ“¦
        uses: pnpm/action-setup@v1.2.1
        with:
          version: latest
          bin_dest: ./pnpm/bin
          run_install: |
            - recursive: true
      - name: Cache base files
        uses: actions/cache@v2
        with:
          path: |
            ./*
            ~/.pnpm-store
            ~/setup-pnpm
          key: ${{ github.sha }}
  test:
    name: Test
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Get base files
        uses: actions/cache@v2
        with:
          path: |
            ./*
            ~/.pnpm-store
            ~/setup-pnpm
          key: ${{ github.sha }}
      - name: Test eds-core-react
        run: ./pnpm/bin/pnpm --filter @equinor/eds-core-react run test
  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Get base files
        uses: actions/cache@v2
        with:
          path: |
            ./*
            ~/.pnpm-store
            ~/setup-pnpm
          key: ${{ github.sha }}
      - name: Lint all libraries
        run: ./pnpm/bin/pnpm run lint ./libraries
  build-tokens:
    name: Build eds-tokens
    runs-on: ubuntu-latest
    needs: [test, lint]
    steps:
      - name: Get base files
        uses: actions/cache@v2
        with:
          path: |
            ./*
            ~/.pnpm-store
            ~/setup-pnpm
          key: ${{ github.sha }}
      - name: Use token build cache
        uses: actions/cache@v2
        with:
          path: ./libraries/tokens
          key: ${{ github.sha }}-build-tokens
      - name: Build
        run: ./pnpm/bin/pnpm --filter @equinor/eds-tokens run build
  build-icons:
    name: Build eds-icons
    runs-on: ubuntu-latest
    needs: [test, lint]
    steps:
      - name: Get base files
        uses: actions/cache@v2
        with:
          path: |
            ./*
            ~/.pnpm-store
            ~/setup-pnpm
          key: ${{ github.sha }}
      - name: Use icons build cache
        uses: actions/cache@v2
        with:
          path: ./libraries/icons
          key: ${{ github.sha }}-build-icons
      - name: Build
        run: ./pnpm/bin/pnpm --filter @equinor/eds-icons run build
  build-core-react:
    name: Build eds-core-react
    runs-on: ubuntu-latest
    needs: [build-icons, build-tokens]
    steps:
      - uses: actions/cache@v2
        name: Get base files
        with:
          path: |
            ./*
            ~/.pnpm-store
            ~/setup-pnpm
          key: ${{ github.sha }}
      - name: Get eds-icons build
        uses: actions/cache@v2
        with:
          path: ./libraries/icons
          key: ${{ github.sha }}-build-icons
      - name: Get eds-tokens build
        uses: actions/cache@v2
        with:
          path: ./libraries/tokens
          key: ${{ github.sha }}-build-tokens
      - name: Use core-react build cache
        uses: actions/cache@v2
        with:
          path: |
            ./*
            ~/.pnpm-store
            ~/setup-pnpm
          key: ${{ github.sha }}-build-core-react
      - name: Build
        run: ./pnpm/bin/pnpm --filter @equinor/eds-core-react run build
  publish-core-react:
    name: Publish eds-core-react to npm
    runs-on: ubuntu-latest
    needs: [build-core-react]
    steps:
      - name: Get eds-core-react build
        uses: actions/cache@v2
        with:
          path: |
            ./*
            ~/.pnpm-store
            ~/setup-pnpm
          key: ${{ github.sha }}-build-core-react
      - name: Publish to npm
        run: ./pnpm/bin/pnpm --filter @equinor/eds-core-react publish --access public --tag ${{ github.event.inputs.npm-tag }} --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  build-storybook:
    name: Build Storybook
    runs-on: ubuntu-latest
    needs: [test, lint]
    steps:
      - name: Get base files
        uses: actions/cache@v2
        with:
          path: |
            ./*
            ~/.pnpm-store
            ~/setup-pnpm
          key: ${{ github.sha }}
      - uses: actions/cache@v2
        name: Use storybook build cache
        with:
          path: |
            ./*
            ~/.pnpm-store
            ~/setup-pnpm
          key: ${{ github.sha }}-build-storybook
      - name: Build storybook
        run: ./pnpm/bin/pnpm --filter @equinor/eds-core-react run build:storybook
  build_push_docker:
    name: Build & Deploy Docker
    runs-on: ubuntu-latest
    needs: [build-storybook]
    outputs:
      image_tag: ${{ steps.tag_name.outputs.image_tag }})
    steps:
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y%m%d')"
      - name: Extract branch name
        id: extract_branch
        shell: bash
        run: echo "::set-output name=branch::$(echo ${GITHUB_REF#refs/heads/})"
      - name: Create docker image tag
        id: image_tag
        run: echo "::set-output name=image_tag::$(echo ${{ github.run_number }}_${{ steps.extract_branch.outputs.branch }}_${{ steps.date.outputs.date }})"
      - name: Get Storybook build from cache
        uses: actions/cache@v2
        with:
          path: |
            ./*
            ~/.pnpm-store
            ~/setup-pnpm
          key: ${{ github.sha }}-build-storybook
      - name: Login via Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Login to registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: Build and push image
        run: |
          docker build -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/eds-storybook:${{ steps.image_tag.outputs.image_tag }} -f ./libraries/core-react/Dockerfile.storybook .
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/eds-storybook:${{ steps.image_tag.outputs.image_tag }}
      - name: Deploy to Web app
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'eds-storybook-react'
          slot-name: '${{ github.event.inputs.storybook-slot }}'
          images: '${{ secrets.REGISTRY_LOGIN_SERVER }}/eds-storybook:${{ steps.image_tag.outputs.image_tag }}'
