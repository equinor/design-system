# Docker image
# Build a Docker image to deploy, run, or push to a container registry.
# Add steps that use Docker Compose, tag images, push to a registry, run an image, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

name: eds-storybook-react-$(Build.BuildId)

trigger:
  batch: 'true'
  tags:
    include:
      - storybook-react
  branches:
    include:
      - develop
  paths:
    include:
      - apps/storybook-react

pr:
  paths:
    include:
      - apps/storybook-react

pool:
  vmImage: 'Ubuntu-16.04'

variables:
  - group: eds-build-tokens
  - name: IMAGE_NAME
    value: eds-storybook-react:$(Build.BuildId)-$(Build.SourceBranchName)
  - name: ROOT_FOLDER
    value: /apps/storybook-react

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '14.x'
    displayName: 'Install Node.js'

  - script: npm install -g pnpm@next
    displayName: 'Install pnpm'

  - script: pnpm --filter eds install
    displayName: 'Install root dependencies'

  - script: >-
      ./node_modules/eslint/bin/eslint.js
      ./apps/storybook-react
      --ext jsx
      --ext js
    displayName: 'Run eslint'

  - script: docker build -f .$(ROOT_FOLDER)/Dockerfile.dev -t $(IMAGE_NAME) .
    displayName: 'Docker build'

  - task: Docker@1
    displayName: 'Tag an image'
    inputs:
      azureSubscriptionEndpoint: 'eds-rg-dev'
      azureContainerRegistry: edscontainers.azurecr.io
      imageName: '$(IMAGE_NAME)'
      includeLatestTag: true
      command: Tag image

  - task: Docker@1
    displayName: 'Push an image'
    inputs:
      azureSubscriptionEndpoint: 'eds-rg-dev'
      azureContainerRegistry: edscontainers.azurecr.io
      command: Push an image
      imageName: '$(IMAGE_NAME)'
